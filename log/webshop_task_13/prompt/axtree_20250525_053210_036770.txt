RootWebArea 'IndexError: list index out of range // Werkzeug Debugger', focused, url='http://54.224.220.64:3000/fixed_13'
	[9] heading 'IndexError'
	[11] paragraph ''
	[12] heading 'Traceback (most recent call last)'
		[13] emphasis ''
	[284] paragraph ''
		StaticText 'This is the Copy/Paste friendly version of the traceback.'
	StaticText 'Traceback (most recent call last):\n  File "/home/ubuntu/data0/miniconda3/envs/webshop/lib/python3.8/site-packages/flask/app.py", line 2095, in __call__\n    return self.wsgi_app(environ, start_response)\n  File "/home/ubuntu/data0/miniconda3/envs/webshop/lib/python3.8/site-packages/flask/app.py", line 2080, in wsgi_app\n    response = self.handle_exception(e)\n  File "/home/ubuntu/data0/miniconda3/envs/webshop/lib/python3.8/site-packages/flask/app.py", line 2077, in wsgi_app\n    response = self.full_dispatch_request()\n  File "/home/ubuntu/data0/miniconda3/envs/webshop/lib/python3.8/site-packages/flask/app.py", line 1525, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File "/home/ubuntu/data0/miniconda3/envs/webshop/lib/python3.8/site-packages/flask/app.py", line 1523, in full_dispatch_request\n    rv = self.dispatch_request()\n  File "/home/ubuntu/data0/miniconda3/envs/webshop/lib/python3.8/site-packages/flask/app.py", line 1509, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)\n  File "/home/ubuntu/data0/webshop/web_agent_site/app.py", line 71, in index\n    goal = goals[goal_dix]\nIndexError: list index out of range'
	StaticText 'The debugger caught an exception in your WSGI application. You can now look at the traceback which led to the error.'
	[288] paragraph ''
		StaticText 'To switch between the interactive traceback and the plaintext one, you can click on the "Traceback" headline. From the text traceback you can also create a paste of it. For code execution mouse-over the frame you want to debug and click on the console icon on the right side.'
	[289] paragraph ''
		StaticText 'You can execute arbitrary Python code in the stack frames and there are some extra helpers available for introspection:'
	[290] list ''
		[291] listitem ''
			ListMarker '•'
			[292] code ''
				StaticText 'dump()'
			StaticText 'shows all variables in the frame'
		[293] listitem ''
			ListMarker '•'
			[294] code ''
				StaticText 'dump(obj)'
			StaticText "dumps all that's known about the object"
	StaticText 'Brought to you by'
	[296] strong ''
		StaticText "DON'T PANIC"
	StaticText ', your friendly Werkzeug powered traceback interpreter.'